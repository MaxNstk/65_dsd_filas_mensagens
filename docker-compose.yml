version: '3.3'


x-common-env: &common-env
  RABBIT_MQ_USER: guest
  RABBIT_MQ_PASSWORD: guest
  RABBIT_MQ_HOST: rabbitmq

services:

  django:
    container_name: 'django'
    environment:
      <<: *common-env
    restart: always
    build:
      context: .
      dockerfile: ./DockerFile
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py runserver 0.0.0.0:8000
      "
    volumes:
      - .:/code
    ports:
      - 8000:8000
      - 3000:3000
    depends_on: 
      - rabbitmq

  rabbitmq:
    image: rabbitmq:4.0-management
    environment:
      RABBITMQ_DEFAULT_PASS: guest
      RABBITMQ_DEFAULT_USER: guest
    ports:
      - 5672:5672
      - 15672:15672

  celery_worker: 
    environment:
      <<: *common-env
    restart: always
    build: 
      context: .
      dockerfile: ./DockerFile
    command: celery -A filas worker -l info
    ports:
        - 6900:6900
    volumes:
      - .:/code
    depends_on:
      - rabbitmq
      - django

  celery_worker2: 
    environment:
      <<: *common-env
    restart: always
    build: 
      context: .
      dockerfile: ./DockerFile
    command: celery -A filas worker -l info
    ports:
        - 6901:6901
    volumes:
      - .:/code
    depends_on:
      - rabbitmq
      - django


  celery_worker3: 
    environment:
      <<: *common-env
    restart: always
    build: 
      context: .
      dockerfile: ./DockerFile
    command: celery -A filas worker -l info
    ports:
        - 6902:6902
    volumes:
      - .:/code
    depends_on:
      - rabbitmq
      - django

  celery_flower:
    container_name: 'celery_flower'
    restart: always
    build:
      context: .
      dockerfile: ./DockerFile
    command: celery -A filas flower --port=5001
    ports:
      - 5001:5001
    volumes:
      - .:/code
    depends_on:
      - django
      - rabbitmq